# ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-web
  namespace: srinivas-gonepudi-dev
data:
  nginx.conf: |
    user www-data;
    worker_processes 4;
    pid /var/run/nginx.pid;

    events {
      worker_connections 768;
    }

    http {
      sendfile on;
      tcp_nopush on;
      tcp_nodelay on;
      keepalive_timeout 65;
      types_hash_max_size 2048;
      client_max_body_size 100m;

      include /etc/nginx/mime.types;
      default_type application/octet-stream;

      access_log /var/log/nginx/access.log;
      error_log /var/log/nginx/error.log warn;

      server {
        listen       8080;
        server_name  localhost;

        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
        }

        location /api/catalogue/ {
          proxy_pass http://catalogue:8080/;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
      }
    }

---
# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-web
  namespace: srinivas-gonepudi-dev
  labels:
    app: nginx-web
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-web
  template:
    metadata:
      labels:
        app: nginx-web
    spec:
      containers:
        - name: nginx-web
          image: 025066240744.dkr.ecr.us-east-1.amazonaws.com/openshift-images-repo:nginx-web
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: nginx-conf
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
              readOnly: true
            - name: nginx-cache
              mountPath: /var/cache/nginx
      volumes:
        - name: nginx-conf
          configMap:
            name: nginx-web
            items:
              - key: nginx.conf
                path: nginx.conf
        - name: nginx-cache
          emptyDir: {}
      imagePullSecrets:
        - name: aws-ecr-secret

---
# Service
apiVersion: v1
kind: Service
metadata:
  name: nginx-web
  namespace: srinivas-gonepudi-dev
spec:
  selector:
    app: nginx-web
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080  # maps external port 80 â†’ container port 8080

---
# Route
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: nginx-web
  namespace: srinivas-gonepudi-dev
spec:
  to:
    kind: Service
    name: nginx-web
  port:
    targetPort: 80
